

spring.datasource.url=jdbc:postgresql://localhost:5432/productList
#spring.datasource.url=jdbc:postgresql://postgresqldb:5432/productList   //hear the postgresqldb is the container name in the docker-compose file
Shift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=postgres
spring.datasource.password=Rakuten@16
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.jpa.show-sql=true
server.error.whitelabel.enabled=true
spring.jpa.open-in-view=false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
api.base.path = http://localhost:8080  // this the port i set where tomcat run


spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB


#email configuration
spring.mail.protocol = smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=srinidhihp73@gmail.com
spring.mail.password=nafadhiwkgshnruq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000


